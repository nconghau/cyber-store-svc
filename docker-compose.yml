version: '3.8'

services:
  db:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /data/cyber_store
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db:/data/cyber_store
    ports:
      - "5332:5432"
    networks:
      - db
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: "1g"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - kafka
    restart: unless-stopped

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://14.225.204.163:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL: SASL_PLAINTEXT
      KAFKA_LISTENER_SASL_MECHANISM: PLAIN
      KAFKA_LISTENER_SASL_USERNAME: ${KAFKA_USERNAME}
      KAFKA_LISTENER_SASL_PASSWORD: ${KAFKA_PASSWORD}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    networks:
      - kafka
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.8"
          memory: "1g"
    healthcheck:
      test: ["CMD", "broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    container_name: redis
    image: redis:7.4.1
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - cyberstore_redis_data:/data/cyber_store
    networks:
      - redis
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD} 
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"] 

networks:
  db:
    driver: bridge
  kafka:
    driver: bridge
  redis:
    driver: bridge

volumes:
  db:
  cyberstore_redis_data: